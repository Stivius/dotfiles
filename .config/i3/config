# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
floating_modifier $mod

# Font for window titles. Will also be used by the bar unless a different font
font pango:monospace 12

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
# Autolock in 15 minutes of inactivity
exec --no-startup-id xautolock -time 15 -locker "i3lock_screen"

# Set wallpaper
exec --no-startup-id feh --bg-scale $HOME/Pictures/Wallpapers/space.png

# load resources
# exec_always --no-startup-id xrdb $HOME/.Xresources

# Update monitors
exec --no-startup-id update_monitors

# Setup keyboard 
exec_always --no-startup-id setup_keyboard

# Launch polybar (sleep 1s waiting for monitors update)
exec_always --no-startup-id "sleep 1; polybar_launch"

# Run compositor (sleep 1s waiting for monitors update)
exec_always --no-startup-id "killall -q picom; sleep 1; picom"

# Autostart apps
exec --no-startup-id nm-applet
exec --no-startup-id blueman-manager
exec firefox
exec spotify
exec telegram-desktop
exec open_calc
exec open_term

# enable laptop monitor in emergency case
bindsym $mod+Mod1+m exec --no-startup-id enable_laptop_monitor

# process management
bindsym $mod+d exec --no-startup-id rofi -show drun
bindsym $mod+q kill

# useful stuff
bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Shift+s exec --no-startup-id i3_swap_workspaces
bindsym $mod+Shift+f exec --no-startup-id open_in_term "Ranger" "ranger"
bindsym $mod+Shift+n exec --no-startup-id dunstctl close-all
#bindsym $mod+Shift+z exec --no-startup-id "$SCRIPTS/external/layout_manager"

# Launch apps
set $mode_launcher (f)irefox, (t)g, (o)bsidian, (c)ode, (z)ettel, s(p)otify, m(a)th, t(e)rminal, (s)team, f(l)ashcards, p(r)ojects, (d)iscord
bindsym $mod+o mode "$mode_launcher"

mode "$mode_launcher" {
    bindsym f exec firefox; mode "default"
    bindsym t exec telegram-desktop; mode "default"
    bindsym o exec obsidian; mode "default"
    bindsym c exec code; mode "default"
	bindsym p exec spotify; mode "default"
	bindsym z exec code /home/stivius/Zettelkasten; mode "default"
	bindsym a exec open_calc; mode "default"
	bindsym e exec open_term; mode "default"
	bindsym s exec steam; mode "default"
	bindsym l exec anki; mode "default"
	bindsym r exec superproductivity; mode "default"
	bindsym d exec discord; mode "default"

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

# Open search
set $mode_search (w)eb, (y)outube, (t)ranslate, (w)eather
bindsym $mod+g mode "$mode_search"

mode "$mode_search" {
    bindsym g exec rofi_search web; mode "default"
    bindsym y exec rofi_search yt; mode "default"
    bindsym t exec rofi_search tr; mode "default"
    bindsym w exec get_weather; mode "default"

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

# Open rofi
set $mode_rofi blue(t)ooth, (p)ass, (b)ooks, (c)onfigs, (s)hortcuts, scr(i)pts, (k)ill process
bindsym $mod+Shift+o mode "$mode_rofi"

mode "$mode_rofi" {
    bindsym t exec rofi_bluetooth; mode "default"
    bindsym p exec rofi-pass; mode "default"
    bindsym b exec rofi_books; mode "default"
    bindsym c exec rofi_configs; mode "default"
	bindsym s exec rofi_shortcuts; mode "default"
	bindsym i exec rofi_scripts; mode "default"
	bindsym k exec rofi_kill_processes; mode "default"

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

# Power off
set $mode_logout (s)uspend, (l)ock screen, l(o)gout, (r)eboot, (p)oweroff
bindsym $mod+p mode "$mode_logout"
mode "$mode_logout" {
    bindsym s exec i3_logout suspend; mode "default"
    bindsym l exec i3_logout lock; mode "default"
    bindsym o exec i3_logout logout; mode "default"
	bindsym r exec i3_logout reboot; mode "default"
	bindsym p exec i3_logout poweroff; mode "default"

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

# Screenshots
set $mode_screenshot (f)ullscreen, (w)indow, (r)egion
bindsym $mod+s mode "$mode_screenshot"

mode "$mode_screenshot" {
    bindsym --release f exec --no-startup-id take_screenshot f; mode "default"
    bindsym --release w exec --no-startup-id take_screenshot w; mode "default"
    bindsym --release r exec --no-startup-id take_screenshot s; mode "default"

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

# Volume Control
bindsym XF86AudioRaiseVolume exec --no-startup-id change_volume +5
bindsym XF86AudioLowerVolume exec --no-startup-id change_volume -5 
bindsym XF86AudioMute exec --no-startup-id change_volume m 
bindsym $mod+Shift+m exec --no-startup-id mute_volume default micro
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

set $mode_volume toggle apps: (s)ound mute, (m)icro mute
bindsym $mod+Shift+v mode "$mode_volume"
mode "$mode_volume" {
	bindsym s exec --no-startup-id mute_volume app sound; mode "default"
	bindsym m exec --no-startup-id mute_volume app micro; mode "default"

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

# Music Control
set $mode_music song: (p)revious, (s)top/play, (n)ext
bindsym $mod+m mode "$mode_music"
mode "$mode_music" {
	bindsym p exec --no-startup-id playerctl previous
	bindsym s exec --no-startup-id playerctl play-pause; mode "default"
	bindsym n exec --no-startup-id playerctl next

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

# Brightness Control
bindsym XF86MonBrightnessUp exec "change_brightness l +5%"
bindsym XF86MonBrightnessDown exec "change_brightness l 5%-"
set $mode_brightness (i)nc monitor britghtness, (d)ec monitor brightness
bindsym $mod+b mode "$mode_brightness" 
mode "$mode_brightness" {
	bindsym i exec change_brightness m + 20
	bindsym d exec change_brightness m - 15

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

# Focus window
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

## Move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
bindsym $mod+semicolon split h
# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Container Layout
set $mode_layout (s)tacking, (t)abbed, t(i)ling
bindsym $mod+t mode "$mode_layout"
mode "$mode_layout" {
    bindsym s layout stacking
    bindsym t layout tabbed
    bindsym i layout toggle split

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+Shift+a focus parent
# focus the child container
bindsym $mod+Shift+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:term"
set $ws2 "2:chat"
set $ws3 "3:web1"
set $ws4 "4:web2"
set $ws5 "5:code"
set $ws6 "6:knowledge"
set $ws7 "7:books"
set $ws8 "8:games"
set $ws9 "9:talk"
set $ws10 "10:others"

for_window [class="^.*"] border pixel 1
for_window [window_role="tooltip"] floating enable
for_window [window_role="popup_menu"] floating enable
for_window [window_role="dialog"] floating enable

focus_on_window_activation urgent

for_window [title="bash"] move --no-auto-back-and-forth to workspace $ws1, focus
for_window [class="Telegram"] move --no-auto-back-and-forth to workspace $ws2, focus
for_window [class="Firefox"] move --no-auto-back-and-forth to workspace $ws3, focus
for_window [class="Code"] move --no-auto-back-and-forth to workspace $ws5, focus
for_window [class="obsidian"] move --no-auto-back-and-forth to workspace $ws6, focus
for_window [class="Anki"] move --no-auto-back-and-forth to workspace $ws6, focus
for_window [title="^Zettelkasten$"] move --no-auto-back-and-forth to workspace $ws6, focus
for_window [class="Zathura"] move --no-auto-back-and-forth to workspace $ws7, focus
for_window [class="Steam"] move --no-auto-back-and-forth to workspace $ws8, focus
for_window [class="discord"] move --no-auto-back-and-forth to workspace $ws9, focus
for_window [title="^Math$"] floating enable, move --no-auto-back-and-forth scratchpad, resize set 920 600
for_window [title="^HandyTerm$"] floating enable, move --no-auto-back-and-forth scratchpad, resize set 920 600

for_window [class="Spotify"] floating enable, resize set 1500 900, move position center, move --no-auto-back-and-forth scratchpad
for_window [class="Blueman-manager"] floating enable, move --no-auto-back-and-forth scratchpad

bindsym $mod+minus scratchpad show
bindsym $mod+Shift+minus move --no-auto-back-and-forth scratchpad

set $mode_scratchpad (m)ath, (t)erminal, (b)luetooth, s(p)otify
bindsym $mod+c mode "$mode_scratchpad"

mode "$mode_scratchpad" {
    bindsym m [title="Math"] scratchpad show, move position center; mode "default"
    bindsym t [title="^HandyTerm$"] scratchpad show, move position center; mode "default"
    bindsym b [class="Blueman-manager"] scratchpad show; mode "default"
    bindsym p [class="Spotify"] scratchpad show, move position center; mode "default"

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

# Workspace Layout
set $laptop eDP-1
set $monitor HDMI-2

workspace $ws1 output $laptop
workspace $ws2 output $laptop
workspace $ws3 output $monitor
workspace $ws4 output $laptop
workspace $ws5 output $monitor
workspace $ws6 output $monitor
workspace $ws7 output $laptop
workspace $ws8 output $monitor
workspace $ws9 output $laptop
workspace $ws10 output $laptop

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move --no-auto-back-and-forth container to workspace $ws1
bindsym $mod+Shift+2 move --no-auto-back-and-forth container to workspace $ws2
bindsym $mod+Shift+3 move --no-auto-back-and-forth container to workspace $ws3
bindsym $mod+Shift+4 move --no-auto-back-and-forth container to workspace $ws4
bindsym $mod+Shift+5 move --no-auto-back-and-forth container to workspace $ws5
bindsym $mod+Shift+6 move --no-auto-back-and-forth container to workspace $ws6
bindsym $mod+Shift+7 move --no-auto-back-and-forth container to workspace $ws7
bindsym $mod+Shift+8 move --no-auto-back-and-forth container to workspace $ws8
bindsym $mod+Shift+9 move --no-auto-back-and-forth container to workspace $ws9
bindsym $mod+Shift+0 move --no-auto-back-and-forth container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
   
workspace_auto_back_and_forth yes

bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize grow width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize shrink width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

smart_gaps on
smart_gaps inverse_outer

workspace $ws1 gaps inner 15
workspace $ws7 gaps inner 15

set_from_resource $background background #000000
set_from_resource $foreground foreground #ffffff
set_from_resource $urgent urgent #ff0000
set_from_resource $primary primary #9300ff

# class                 border  bground text    indicator child_border
client.focused          $primary $primary $foreground $primary $primary
client.focused_inactive $background $background $foreground $background $background
client.unfocused        $background $background $foreground $background $background
client.urgent           $urgent $urgent $foreground $urgent $urgent
client.placeholder      $background $background $background $background $bacgkround

client.background       $background
